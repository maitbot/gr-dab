# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-dab
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

include_directories(${Boost_INCLUDE_DIR} ${FDK-AAC-DAB_INCLUDE_DIRS} ${LIBTOOLAME-DAB_INCLUDE_DIR})

list(APPEND dab_sources
    moving_sum_ff_impl.cc
    ofdm_ffe_all_in_one_impl.cc
    ofdm_sampler_impl.cc
    ofdm_coarse_frequency_correct_impl.cc
    diff_phasor_vcc_impl.cc
    ofdm_remove_first_symbol_vcc_impl.cc
    frequency_interleaver_vcc_impl.cc
    qpsk_demapper_vcb_impl.cc
    complex_to_interleaved_float_vcf_impl.cc
    modulo_ff_impl.cc
    measure_processing_rate_impl.cc
    select_vectors_impl.cc
    repartition_vectors_impl.cc
    unpuncture_vff_impl.cc
    prune_vectors_impl.cc
    fib_sink_vb_impl.cc
    crc16.cc
    estimate_sample_rate_bf_impl.cc
    fractional_interpolator_triggered_update_cc_impl.cc
    magnitude_equalizer_vcc_impl.cc
    qpsk_mapper_vbc_impl.cc
    ofdm_insert_pilot_vcc_impl.cc
    sum_phasor_trig_vcc_impl.cc
    ofdm_move_and_insert_zero_impl.cc
    insert_null_symbol_impl.cc
    time_deinterleave_ff_impl.cc
    crc16_bb_impl.cc
    select_subch_vfvf_impl.cc
    unpuncture_ff_impl.cc
    prune_impl.cc
    firecode-checker.cpp
    firecode_check_bb_impl.cc
    puncture_bb_impl.cc
    mp2_decode_bs_impl.cc
    mp4_decode_bs_impl.cc
    reed_solomon_decode_bb_impl.cc
    fec/decode_rs_char.c
    fec/init_rs_char.c
    valve_ff_impl.cc
    peak_detector_fb_impl.cc
    control_stream_to_tag_cc_impl.cc
    xrun_monitor_cc_impl.cc )

set(dab_sources "${dab_sources}" PARENT_SCOPE)
if(NOT dab_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT dab_sources)

add_library(gnuradio-dab SHARED ${dab_sources})
target_link_libraries(gnuradio-dab gnuradio::gnuradio-runtime gnuradio::gnuradio-filter ${FAAD_LIBRARIES})
target_include_directories(gnuradio-dab
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-dab PROPERTIES DEFINE_SYMBOL "gnuradio_dab_EXPORTS")
set_target_properties(gnuradio-dab PROPERTIES SOVERSION 3.9.0)

if(APPLE)
    set_target_properties(gnuradio-dab PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-dab)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_dab_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-dab)

if(NOT test_dab_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_dab_sources)

foreach(qa_file ${test_dab_sources})
    GR_ADD_CPP_TEST("dab_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
