/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(xrun_monitor_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(f261a1e1fc363f6b9ff6ed1e5c65975c)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <dab/xrun_monitor_cc.h>
// pydoc.h is automatically generated in the build directory
#include <xrun_monitor_cc_pydoc.h>

void bind_xrun_monitor_cc(py::module& m)
{

    using xrun_monitor_cc    = ::gr::dab::xrun_monitor_cc;


    py::class_<xrun_monitor_cc, gr::block, gr::basic_block,
        std::shared_ptr<xrun_monitor_cc>>(m, "xrun_monitor_cc", D(xrun_monitor_cc))

        .def(py::init(&xrun_monitor_cc::make),
           py::arg("length") = 500000,
           D(xrun_monitor_cc,make)
        )
        




        
        .def("set_drop_when_full",&xrun_monitor_cc::set_drop_when_full,       
            py::arg("val"),
            D(xrun_monitor_cc,set_drop_when_full)
        )


        
        .def("stop_until_tag",&xrun_monitor_cc::stop_until_tag,       
            D(xrun_monitor_cc,stop_until_tag)
        )


        
        .def("set_report_fill",&xrun_monitor_cc::set_report_fill,       
            py::arg("arg0"),
            D(xrun_monitor_cc,set_report_fill)
        )

        ;




}








