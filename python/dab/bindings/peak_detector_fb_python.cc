/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(peak_detector_fb.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(c969bb41ee9dc6b59bed20ce0d71b89b)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <dab/peak_detector_fb.h>
// pydoc.h is automatically generated in the build directory
#include <peak_detector_fb_pydoc.h>

void bind_peak_detector_fb(py::module& m)
{

    using peak_detector_fb    = ::gr::dab::peak_detector_fb;


    py::class_<peak_detector_fb, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<peak_detector_fb>>(m, "peak_detector_fb", D(peak_detector_fb))

        .def(py::init(&peak_detector_fb::make),
           py::arg("threshold_factor_rise") = 0.25,
           py::arg("threshold_factor_fall") = 0.40000000000000002,
           py::arg("look_ahead") = 10,
           py::arg("alpha") = 0.001,
           D(peak_detector_fb,make)
        )
        




        
        .def("set_threshold_factor_rise",&peak_detector_fb::set_threshold_factor_rise,       
            py::arg("thr"),
            D(peak_detector_fb,set_threshold_factor_rise)
        )


        
        .def("set_threshold_factor_fall",&peak_detector_fb::set_threshold_factor_fall,       
            py::arg("thr"),
            D(peak_detector_fb,set_threshold_factor_fall)
        )


        
        .def("set_look_ahead",&peak_detector_fb::set_look_ahead,       
            py::arg("look"),
            D(peak_detector_fb,set_look_ahead)
        )


        
        .def("set_alpha",&peak_detector_fb::set_alpha,       
            py::arg("alpha"),
            D(peak_detector_fb,set_alpha)
        )


        
        .def("threshold_factor_rise",&peak_detector_fb::threshold_factor_rise,       
            D(peak_detector_fb,threshold_factor_rise)
        )


        
        .def("threshold_factor_fall",&peak_detector_fb::threshold_factor_fall,       
            D(peak_detector_fb,threshold_factor_fall)
        )


        
        .def("look_ahead",&peak_detector_fb::look_ahead,       
            D(peak_detector_fb,look_ahead)
        )


        
        .def("alpha",&peak_detector_fb::alpha,       
            D(peak_detector_fb,alpha)
        )

        ;




}








