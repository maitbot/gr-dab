Index: gnuradio-core/src/lib/general/gr_head.cc
===================================================================
--- gnuradio-core/src/lib/general/gr_head.cc	(revision 8534)
+++ gnuradio-core/src/lib/general/gr_head.cc	(working copy)
@@ -35,10 +35,10 @@
 {
 }
 
-gr_block_sptr
+gr_head_sptr
 gr_make_head (size_t sizeof_stream_item, int nitems)
 {
-  return gr_block_sptr (new gr_head (sizeof_stream_item, nitems));
+  return gr_head_sptr (new gr_head (sizeof_stream_item, nitems));
 }
 
 int
Index: gnuradio-core/src/lib/general/gr_head.h
===================================================================
--- gnuradio-core/src/lib/general/gr_head.h	(revision 8534)
+++ gnuradio-core/src/lib/general/gr_head.h	(working copy)
@@ -26,6 +26,9 @@
 #include <gr_sync_block.h>
 #include <stddef.h>			// size_t
 
+class gr_head;
+typedef std::shared_ptr<gr_head> gr_head_sptr;
+
 /*!
  * \brief copies the first N items to the output then signals done
  * \ingroup flow
@@ -35,19 +38,20 @@
 
 class gr_head : public gr_sync_block
 {
-  friend gr_block_sptr gr_make_head (size_t sizeof_stream_item, int nitems);
+  friend gr_head_sptr gr_make_head (size_t sizeof_stream_item, int nitems);
   gr_head (size_t sizeof_stream_item, int nitems);
 
   int	d_nitems;
   int	d_ncopied_items;
 
  public:
+  void rewind() { d_ncopied_items=0; }
   int work (int noutput_items,
 		 gr_vector_const_void_star &input_items,
 		 gr_vector_void_star &output_items);
 };
 
-gr_block_sptr
+gr_head_sptr
 gr_make_head (size_t sizeof_stream_item, int nitems);
 
 
Index: gnuradio-core/src/lib/general/gr_head.i
===================================================================
--- gnuradio-core/src/lib/general/gr_head.i	(revision 8534)
+++ gnuradio-core/src/lib/general/gr_head.i	(working copy)
@@ -20,11 +20,13 @@
  * Boston, MA 02110-1301, USA.
  */
 
-%ignore gr_head;
+GR_SWIG_BLOCK_MAGIC(gr,head);
+
+gr_head_sptr gr_make_head (size_t sizeof_stream_item, int nitems);
+
 class gr_head : public gr_block {
-  friend gr_block_sptr gr_make_head (size_t sizeof_stream_item, int nitems);
+  friend gr_head_sptr gr_make_head (size_t sizeof_stream_item, int nitems);
   gr_head (size_t sizeof_stream_item, int nitems);
+  public:
+    void rewind() { d_ncopied_items=0; }
 };
-
-%rename(head) gr_make_head;
-gr_block_sptr gr_make_head (size_t sizeof_stream_item, int nitems);
